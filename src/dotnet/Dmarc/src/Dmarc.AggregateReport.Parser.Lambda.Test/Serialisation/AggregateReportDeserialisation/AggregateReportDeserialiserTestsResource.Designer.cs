//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dmarc.Lambda.AggregateReport.Parser.Test.Serialisation.AggregateReportDeserialisation {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AggregateReportDeserialiserTestsResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal AggregateReportDeserialiserTestsResource() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dmarc.AggregateReport.Parser.Lambda.Test.Serialisation.AggregateReportDeserialisa" +
                            "tion.AggregateReportDeserialiserTestsResource", typeof(AggregateReportDeserialiserTestsResource).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string CorrectlyFormedReport {
            get {
                return ResourceManager.GetString("CorrectlyFormedReport", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string CorrectlyFormedReportNoDeclaration {
            get {
                return ResourceManager.GetString("CorrectlyFormedReportNoDeclaration", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string MultiplePolicyPublishedTags {
            get {
                return ResourceManager.GetString("MultiplePolicyPublishedTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string MultipleRecordTags {
            get {
                return ResourceManager.GetString("MultipleRecordTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string MultipleReportMetadataTags {
            get {
                return ResourceManager.GetString("MultipleReportMetadataTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string NoPolicyPublishedTags {
            get {
                return ResourceManager.GetString("NoPolicyPublishedTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;report_metadata&gt;
        ///	&lt;/report_metadata&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string NoRecordTags {
            get {
                return ResourceManager.GetString("NoRecordTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;policy_published&gt;
        ///	&lt;/policy_published&gt;
        ///	&lt;record&gt;
        ///	&lt;/record&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string NoReportMetadataTags {
            get {
                return ResourceManager.GetString("NoReportMetadataTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;not_feedback&gt;
        ///&lt;/not_feedback&gt;.
        /// </summary>
        public static string RootNotFeedback {
            get {
                return ResourceManager.GetString("RootNotFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;feedback&gt;
        ///	&lt;not_feedback&gt;
        ///		&lt;report_metadata&gt;
        ///		&lt;/report_metadata&gt;
        ///		&lt;policy_published&gt;
        ///		&lt;/policy_published&gt;
        ///		&lt;record&gt;
        ///		&lt;/record&gt;
        ///	&lt;/not_feedback&gt;
        ///&lt;/feedback&gt;.
        /// </summary>
        public static string TagsNotDirectDescendants {
            get {
                return ResourceManager.GetString("TagsNotDirectDescendants", resourceCulture);
            }
        }
    }
}
