//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dmarc.DomainStatus.Api.Dao.DomainStatus {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DomainStatusDaoResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal DomainStatusDaoResources() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dmarc.DomainStatus.Api.Dao.DomainStatus.DomainStatusDaoResources", typeof(DomainStatusDaoResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT
        ///header_from,
        ///source_ip,
        ///NULL ptr,
        ///SUM(count) as count,
        ///spf,
        ///dkim,
        ///disposition,
        ///org_name,
        ///effective_date
        ///FROM record
        ///JOIN aggregate_report ar ON record.aggregate_report_id = ar.id 
        ///JOIN derived_domain_tree ddt ON record.header_from_domain_id = ddt.child_id
        ///WHERE ar.effective_date = @date 
        ///AND ddt.parent_id = @domainId
        ///GROUP BY header_from, source_ip, spf, dkim, disposition, org_name, effective_date;.
        /// </summary>
        public static string SelectAggregateExportData {
            get {
                return ResourceManager.GetString("SelectAggregateExportData", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT
        ///ad.effective_date as &apos;effective_date&apos;,
        ///ad.full_compliance_count as &apos;fully_trusted&apos;,
        ///(ad.dkim_only_count + ad.spf_only_count) as &apos;partially_trusted&apos;,
        ///ad.untrusted_pass_count as &apos;untrusted&apos;,
        ///ad.untrusted_quarantine_count as &apos;quarantined&apos;,
        ///ad.untrusted_reject_count as  &apos;rejected&apos;,
        ///ad.total_email_count as &apos;total&apos;
        ///FROM derived_aggregate_daily ad
        ///WHERE ad.domain_id = @domainId
        ///AND ad.effective_date BETWEEN @startDate AND @endDate;.
        /// </summary>
        public static string SelectAggregateReportSummary {
            get {
                return ResourceManager.GetString("SelectAggregateReportSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT
        ///ad.effective_date as &apos;effective_date&apos;,
        ///ad.full_compliance_count as &apos;fully_trusted&apos;,
        ///(ad.dkim_only_count + ad.spf_only_count) as &apos;partially_trusted&apos;,
        ///ad.untrusted_pass_count as &apos;untrusted&apos;,
        ///ad.untrusted_quarantine_count as &apos;quarantined&apos;,
        ///ad.untrusted_reject_count as  &apos;rejected&apos;,
        ///ad.total_email_count as &apos;total&apos;
        ///FROM derived_aggregate_daily_rollup ad
        ///WHERE ad.domain_id = @domainId
        ///AND ad.effective_date BETWEEN @startDate AND @endDate;.
        /// </summary>
        public static string SelectAggregateReportSummaryWithSubdomains {
            get {
                return ResourceManager.GetString("SelectAggregateReportSummaryWithSubdomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT SUM(ad.total_email_count) as &apos;total_email&apos;
        ///FROM derived_aggregate_daily ad
        ///WHERE ad.domain_id = @domainId
        ///AND ad.effective_date BETWEEN @startDate AND @endDate;.
        /// </summary>
        public static string SelectAggregateReportTotalEmailCount {
            get {
                return ResourceManager.GetString("SelectAggregateReportTotalEmailCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT SUM(ad.total_email_count) as &apos;total_email&apos;
        ///FROM derived_aggregate_daily_rollup ad
        ///WHERE ad.domain_id = @domainId
        ///AND ad.effective_date BETWEEN @startDate AND @endDate;.
        /// </summary>
        public static string SelectAggregateReportTotalEmailCountWithSubdomains {
            get {
                return ResourceManager.GetString("SelectAggregateReportTotalEmailCountWithSubdomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT d.id as domain_id,
        ///d.name as domain_name,
        ///dr.record IS NOT NULL as has_dmarc,
        ///rm.model as read_model
        ///FROM dns_record_dmarc_read_model rm
        ///JOIN domain d ON rm.domain_id = d.id
        ///LEFT JOIN dns_record_dmarc dr ON dr.domain_id = d.id AND dr.end_date IS NULL
        ///WHERE d.id = @domainId
        ///GROUP BY d.id;.
        /// </summary>
        public static string SelectDmarcReadModelByDomainId {
            get {
                return ResourceManager.GetString("SelectDmarcReadModelByDomainId", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT d.id as domain_id,
        ///d.name as domain_name,
        ///dr.record IS NOT NULL as has_dmarc,
        ///rm.model as read_model
        ///FROM dns_record_dmarc_read_model rm
        ///JOIN domain d ON rm.domain_id = d.id
        ///LEFT JOIN dns_record_dmarc dr ON dr.domain_id = d.id AND dr.end_date IS NULL
        ///WHERE d.name = @domainName
        ///GROUP BY d.id;.
        /// </summary>
        public static string SelectDmarcReadModelByDomainName {
            get {
                return ResourceManager.GetString("SelectDmarcReadModelByDomainName", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT 
        ///d.id AS domain_id, 
        ///d.name AS domain_name 
        ///FROM domain d
        ///WHERE d.id = @domainId AND (d.publish=b&apos;1&apos; OR d.monitor=b&apos;1&apos;);.
        /// </summary>
        public static string SelectDomainById {
            get {
                return ResourceManager.GetString("SelectDomainById", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  SELECT 
        ///d.id domain_id,
        ///d.name domain_name,
        ///mx.id mx_record_id,
        ///mx.preference preference,
        ///mx.hostname hostname,
        ///mx.last_checked mx_last_checked,
        ///tls.last_checked tls_last_checked,
        ///tls.sslv3_support sslv3_support,
        ///tls.sslv3_cipher sslv3_cipher,
        ///tls.tlsv1_support tlsv1_support,
        ///tls.tlsv1_cipher  tlsv1_cipher,
        ///tls.tlsv11_support tlsv11_support,
        ///tls.tlsv11_cipher  tlsv11_cipher,
        ///tls.tlsv12_support tlsv12_support,
        ///tls.tlsv12_cipher  tlsv12_cipher,
        ///cert.thumb_print thumb_print,
        ///cert.issuer issuer [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelectReceivingEncryptedById {
            get {
                return ResourceManager.GetString("SelectReceivingEncryptedById", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT model 
        ///FROM dns_record_spf_read_model
        ///WHERE domain_id = @domainId;.
        /// </summary>
        public static string SelectSpfReadModel {
            get {
                return ResourceManager.GetString("SelectSpfReadModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT d.id, d.name, dnm.hostname, ter.*  
        ///FROM dmarc.dns_record_mx_tls_evaluator_results ter
        ///JOIN dmarc.dns_record_mx dnm
        ///ON ter.mx_record_id = dnm.id
        ///JOIN dmarc.domain d
        ///ON dnm.domain_id = d.id
        ///WHERE d.id = @domainId
        ///AND dnm.end_date IS NULL;.
        /// </summary>
        public static string SelectTlsEvaluatorResults {
            get {
                return ResourceManager.GetString("SelectTlsEvaluatorResults", resourceCulture);
            }
        }
    }
}
