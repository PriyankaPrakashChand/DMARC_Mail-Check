//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dmarc.DnsRecord.Importer.Lambda.Dao.Dmarc {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DmarcRecordDaoResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal DmarcRecordDaoResources() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dmarc.DnsRecord.Importer.Lambda.Dao.Dmarc.DmarcRecordDaoResources", typeof(DmarcRecordDaoResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to INSERT INTO dns_record_dmarc
        ///(`id`,
        ///`domain_id`,
        ///`record`,
        ///`end_date`,
        ///`failure_count`,
        ///`result_code`,
        ///`org_domain`,
        ///`is_tld`) VALUES.
        /// </summary>
        public static string InsertRecord {
            get {
                return ResourceManager.GetString("InsertRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to ON DUPLICATE KEY UPDATE `end_date` = VALUES(`end_date`),
        ///`failure_count` = VALUES(`failure_count`),
        ///`result_code` = VALUES(`result_code`),
        ///`last_checked` = UTC_TIMESTAMP();.
        /// </summary>
        public static string InsertRecordOnDuplicateKey {
            get {
                return ResourceManager.GetString("InsertRecordOnDuplicateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to (@a{0},
        ///@b{0},
        ///@c{0},
        ///@d{0},
        ///@e{0},
        ///@f{0},
        ///@g{0},
        ///@h{0}).
        /// </summary>
        public static string InsertRecordValueFormatString {
            get {
                return ResourceManager.GetString("InsertRecordValueFormatString", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  SELECT temp.domain_id,
        ///temp.domain_name,
        ///dr2.id,
        ///dr2.record,
        ///dr2.result_code,
        ///dr2.failure_count,
        ///dr2.org_domain,
        ///dr2.is_tld
        ///FROM
        ///(
        ///SELECT d1.id as domain_id,
        ///d1.name as domain_name,
        ///MAX(COALESCE(dr1.last_checked, &apos;1900-01-01&apos;)) as lst_checked
        ///FROM domain d1
        ///LEFT JOIN dns_record_dmarc dr1 ON d1.id = dr1.domain_id
        ///WHERE (d1.monitor = b&apos;1&apos; OR d1.publish=b&apos;1&apos;) 
        ///AND dr1.end_date IS NULL
        ///AND (dr1.id IS NULL ||
        ///	(UTC_TIMESTAMP() &gt; DATE_ADD(dr1.last_checked, INTERVAL @refreshIntervalSeconds SECOND [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelectDomainsWithRecords {
            get {
                return ResourceManager.GetString("SelectDomainsWithRecords", resourceCulture);
            }
        }
    }
}
