//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dmarc.AggregateReport.Api.Dao.Aggregated {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///    A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class AggregatedStatisticsDaoResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        internal AggregatedStatisticsDaoResources() {
        }
        
        /// <summary>
        ///    Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Dmarc.AggregateReport.Api.Dao.Aggregated.AggregatedStatisticsDaoResources", typeof(AggregatedStatisticsDaoResources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///    Overrides the current thread's CurrentUICulture property for all
        ///    resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT sum(full_compliance_count) &apos;full_compliance_count&apos;,
        ///	sum(dkim_only_count) &apos;dkim_only_count&apos;,
        ///	sum(spf_only_count) &apos;spf_only_count&apos;
        ///FROM derived_aggregate_daily_rollup dad
        ///JOIN derived_user_domain_rollup_permissions dudrp 
        ///ON dad.domain_id = dudrp.domain_id
        ///WHERE dudrp.user_id = @userId 
        ///AND effective_date BETWEEN @begin_date
        ///AND  @end_date
        ///AND ((@domainId IS NULL AND dudrp.rollup = 1) OR dudrp.domain_id = @domainId) ;.
        /// </summary>
        public static string SelectComplianceAggregated {
            get {
                return ResourceManager.GetString("SelectComplianceAggregated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT sum(disposition_none_count) &apos;disposition_none_count&apos;, sum(disposition_quarantine_count) &apos;disposition_quarantine_count&apos;, sum(disposition_reject_count) &apos;disposition_reject_count&apos;
        ///FROM derived_aggregate_daily_rollup dad
        ///JOIN derived_user_domain_rollup_permissions dudrp 
        ///ON dad.domain_id = dudrp.domain_id
        ///WHERE dudrp.user_id = @userId 
        ///AND effective_date BETWEEN @begin_date
        ///AND  @end_date
        ///AND ((@domainId IS NULL AND dudrp.rollup = 1) OR dudrp.domain_id = @domainId);.
        /// </summary>
        public static string SelectedDispositionAggregated {
            get {
                return ResourceManager.GetString("SelectedDispositionAggregated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to  SELECT COUNT(DISTINCT dad.domain_id) &apos;domain_count&apos;, SUM(aggregate_report_count) &apos;aggregate_report_count&apos;,sum(aggregate_report_record_count) &apos;aggregate_report_record_count&apos;, sum(total_email_count) &apos;total_email_count&apos;, sum(trusted_email_count) &apos;trusted_email_count&apos;, sum(untrusted_email_count) &apos;untrusted_email_count&apos;,sum(full_compliance_count) &apos;full_compliance_count&apos;,sum(dkim_only_count) &apos;dkim_only_count&apos;,sum(spf_only_count) &apos;spf_only_count&apos;, sum(disposition_none_count) &apos;disposition_none_count&apos;, sum(dispositi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SelectHeadlineAggregated {
            get {
                return ResourceManager.GetString("SelectHeadlineAggregated", resourceCulture);
            }
        }
        
        /// <summary>
        ///    Looks up a localized string similar to SELECT  sum(trusted_email_count) &apos;trusted_email_count&apos;, sum(untrusted_email_count) &apos;untrusted_email_count&apos; 
        ///FROM derived_aggregate_daily_rollup dad
        ///JOIN derived_user_domain_rollup_permissions dudrp 
        ///ON dad.domain_id = dudrp.domain_id
        ///WHERE dudrp.user_id = @userId 
        ///AND effective_date BETWEEN @begin_date
        ///AND  @end_date
        ///AND ((@domainId IS NULL AND dudrp.rollup = 1) OR dudrp.domain_id = @domainId);.
        /// </summary>
        public static string SelectTrustAggregated {
            get {
                return ResourceManager.GetString("SelectTrustAggregated", resourceCulture);
            }
        }
    }
}
