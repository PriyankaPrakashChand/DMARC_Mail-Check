<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" />
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string" />
                            <xsd:attribute name="type" type="xsd:string" />
                            <xsd:attribute name="mimetype" type="xsd:string" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string" />
                            <xsd:attribute name="name" type="xsd:string" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
                            <xsd:attribute ref="xml:space" />
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" />
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="MaxLengthOf450CharactersErrorMessage" xml:space="preserve">
    <value>Record length should be less than or equal to {0} characters. This record has {1} characters.</value>
  </data>
    <data name="NoDmarcErrorMessage" xml:space="preserve">
    <value>No DMARC record configured, to safely get started with DMARC add the following to DNS: `_dmarc.{0} TXT v=DMARC1;p=none;sp=none;rua=mailto:dmarc-rua@dmarc.service.gov.uk;`. For more information, see our [detailed guidance](https://www.ncsc.gov.uk/guidance/email-security-and-anti-spoofing). </value>
  </data>
    <data name="OnlyOneDmarcRecordErrorMessage" xml:space="preserve">
    <value>A domain should have only 1 DMARC record.</value>
  </data>
    <data name="PctValueShouldBe100ErrorMessage" xml:space="preserve">
    <value>Only a percent value (pct) of 100 will apply DMARC policy to all messages. Consider changing percent value from {0} to 100.</value>
  </data>
    <data name="PolicyShouldBeQuarantineOrRejectErrorMessage" xml:space="preserve">
    <value>Only a policy (p) of Quarantine or Reject will protect recipients from spoofed email. Consider changing policy from {0} to Quarantine or Reject.</value>
  </data>
    <data name="PolicyTagMustExistErrorMessage" xml:space="preserve">
    <value>Record must contain a policy (p) tag.</value>
  </data>
    <data name="RuaMailbox" xml:space="preserve">
    <value>mailto:dmarc-rua@dmarc.service.gov.uk</value>
  </data>
    <data name="RuaTagShouldHaveAtLeastOneUri" xml:space="preserve">
    <value>Rua tag should have at least 1 URI. This rua tag has 0.</value>
  </data>
    <data name="RuaTagShouldNotContainDuplicateUrisErrorMessage" xml:space="preserve">
    <value>The report aggregate URIs tag (rua) has duplicate URIs. Consider removing the duplicate entries from the rua tag.</value>
  </data>
    <data name="RuaTagShouldNotHaveMisconfiguredMailCheckMailboxErrorMessage" xml:space="preserve">
    <value>The aggregate report URI tag (rua) is misconfigured. Mail Check only processes aggregate reports sent to {0}. Update the rua value to `{1}`.</value>
  </data>
    <data name="RuaTagShouldNotHaveMoreThanTwoUrisErrorMessage" xml:space="preserve">
    <value>Only 2 aggregate report URIs (rua) are guaranteed to have reports delivered. This record has {0}.</value>
  </data>
    <data name="RuaTagsShouldBeMailToErrorMessage" xml:space="preserve">
    <value>Only URIs with mailto: scheme are guaranteed to have aggregate reports delivered. This record has non mailto: scheme URIs in its aggregate report URI tag (rua).</value>
  </data>
    <data name="RuaTagsShouldContainDmarcServiceMailBoxErrorMessage" xml:space="preserve">
    <value>Mail Check can only provide email reporting if the aggregate report URI tag (rua) includes the {0} mailbox. Consider adding `{1}` to the rua tag values.</value>
  </data>
    <data name="RufTagShouldBeMailToErrorMessage" xml:space="preserve">
    <value>Only URIs with mailto: scheme are guaranteed to have forensic reports delivered. This record has non mailto: scheme URIs in its forensic report URI tag (ruf).</value>
  </data>
    <data name="RufTagShouldNotContainDuplicateUrisErrorMessage" xml:space="preserve">
    <value>The report forensic URIs tag (ruf) has duplicate URIs. Consider removing the duplicate entries from the ruf tag. </value>
  </data>
    <data name="RufTagShouldNotHaveMoreThanTwoUrisErrorMessage" xml:space="preserve">
    <value>Only 2 forensic report URIs (ruf) are guaranteed to have reports delivered. This record has {0}.</value>
  </data>
    <data name="SubDomainIneffectualErrorMessage" xml:space="preserve">
    <value>The specified sub-domain policy (sp) is ineffective because {0} is not an organisational domain.</value>
  </data>
    <data name="SubdomainPolicyMustBeQuarantineOrRejectErrorMessage" xml:space="preserve">
    <value>Only a sub domain policy (sp) of Quarantine or Reject will protect recipients from spoofed email. Consider changing sub domain policy from {0} to Quarantine or Reject.</value>
  </data>
    <data name="TldDmarcWeaklyDefinedMessage" xml:space="preserve">
    <value>DMARC behaviour for domains that appear on the Public Suffix List is weakly defined. Because {0} is on the Public Suffix List, you may experience unexpected results.</value>
  </data>
    <data name="VersionMustBeFirstTagErrorMessage" xml:space="preserve">
    <value>First tag should be version (v=DMARC1) but was {0}.</value>
  </data>
</root>